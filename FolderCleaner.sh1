#Set how old files should be to be cleaned
do {
  [System.Reflection.Assembly]::LoadWithPartialName('Microsoft.VisualBasic') | Out-Null
$age = [Microsoft.VisualBasic.Interaction]::InputBox("How many days old files should be cleaned?", "Folder Cleaner")
  $value = $age -as [Int]
  $ok = $value -ne $NULL
  if ( -not $ok ) { write-host "You must enter a numeric value" }
}
until ( $ok )
#Open folder browser, select folder to clean of old files
Function Get-Folder($initialDirectory)
{
    [System.Reflection.Assembly]::LoadWithPartialName("System.windows.forms")|Out-Null

    $foldername = New-Object System.Windows.Forms.FolderBrowserDialog
    $foldername.Description = "Select a folder to clean of files older than: "+$age
    $foldername.rootfolder = "MyComputer"

    if($foldername.ShowDialog() -eq "OK")
    {
        $folder += $foldername.SelectedPath
    } else {
    Break
    }
    return $folder
}
#Get selected folder and create the zip folder path
$folder = Get-Folder
$folder = $folder+"\"
$zipfile = $folder+"\OldFiles.zip"

#deafault age of files to clean 30 days
$limit = (Get-Date).AddDays(-$age)
#find all the old files in the folder to clean
$files = Get-ChildItem $folder -Recurse | Where-Object {
    $_.LastWriteTime -lt $limit
}

if([System.IO.File]::Exists($zipfile)){
	[System.Reflection.Assembly]::LoadWithPartialName("Microsoft.VisualBasic")
	$ans = [Microsoft.VisualBasic.Interaction]::MsgBox("The file OldFiles.zip already exists, overwrite?",'YesNoCancel,Question', "Respond please")
	if($ans=="No"){
		[void][Reflection.Assembly]::LoadWithPartialName('Microsoft.VisualBasic')
		$title = 'OldFile.zip already exists, enter a new name for zip file to store old files in'
		$msg   = 'Enter name of zip file:'
		$zipfile = [Microsoft.VisualBasic.Interaction]::InputBox($msg, $title)
	}
}

#for each found item, zip into archive (with default Optimized setting) and delete from the folder to clean
foreach($file in $files) {
    try {
        Compress-Archive $folder$file -DestinationPath $zipfile -Update -ErrorAction Stop
        Remove-Item $folder$file -Recurse -ErrorAction Stop
    } catch {
        Write-Verbose "Something went wrong with zipping/removing files"
    }
}
